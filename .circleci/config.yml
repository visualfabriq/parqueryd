version: 2
jobs:
  build27:
    docker:
      - image: circleci/python:2.7

    working_directory: ~/parqueryd/
    steps:
      - checkout:
          path: ~/parqueryd
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Check docker-compose version
          command: |
            docker -v
            docker-compose -v
      - run:
          name: Start Services
          command: |
            docker-compose -f docker-compose.yml up --build -d
      - run:
          name: Sleep 30 seconds waiting for localstack service building
          command: sleep 30
      - run:
          name: Run Tests
          command: docker-compose -f docker-compose.yml run parqueryd pytest -v --junitxml=test-results/pytest/pytest-report.xml
      - run:
          name: Copy Test Results
          when: always  # run even if previous run commands failed
          command: |
            docker cp $(docker ps -q --filter volume=parqueryd_test-results):test-results test-results
      - run:
          name: Stop Services
          command: docker-compose down
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1

#  build3:
#    docker:
#      - image: circleci/python:3.7.1
#
#    working_directory: ~/parqueryd
#    steps:
#      - checkout:
#      - run:
#          name: Install Requirements
#          command: sudo pip install -r requirements.txt
#      - run:
#          name: Install Module
#          command: python setup.py build_ext --inplace && sudo python setup.py install
#      - run:
#          name: Run Tests
#          command: pytest -vs parqueryd/tests/ --junitxml=test-results/pytest/pytest-report.xml

#      - run:
#          name: Install Twine
#          command: sudo pip install twine
#      - run:
#          name: Package Project
#          command: sudo python setup.py sdist bdist_wheel
#      - run:
#          name: Upload to Pypi
#          command: sudo twine upload -u ${PYPI_USERNAME} -p ${PYPI_PASSWORD} dist/*

workflows:
  version: 2
  build-and-release:
    jobs:
      - build27:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
#      - pypi_release:
#          requires:
#            - build
#          filters:
#            tags:
#              only: /[0-9]+(\.[0-9]+)*/
#            branches:
#              ignore: /.*/