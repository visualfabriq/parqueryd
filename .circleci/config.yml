version: 2.1

parameters:
  workingdir:
    type: string
    default: "~/parqueryd/"

jobs:
  test:
    parameters:
      runtime:
        description: Python runtime
        type: string

    docker:
      - image: cimg/python:<< parameters.runtime >>

    working_directory: << pipeline.parameters.workingdir >>
    steps:
      - checkout:
          path: << pipeline.parameters.workingdir >>
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Check docker-compose version
          command: |
            docker -v
            docker-compose -v
      - run:
          name: Start Services
          command: |
            CODEARTIFACT_TOKEN=$(aws --output text codeartifact get-authorization-token --domain visualfabriq --query authorizationToken)
            PIP_TRUSTED_HOST="visualfabriq-${AWS_ACCOUNT_ID}.d.codeartifact.${AWS_DEFAULT_REGION}.amazonaws.com"
            export PIP_INDEX_URL="https://aws:${CODEARTIFACT_TOKEN}@${PIP_TRUSTED_HOST}/pypi/private/simple"
            docker-compose -f docker-compose.yml up --build -d
      - run:
          name: Sleep 30 seconds waiting for localstack service building
          command: sleep 30
      - run:
          name: Run Tests
          command: docker-compose -f docker-compose.yml run parqueryd pytest -v --junitxml=test-results/pytest/pytest-report.xml
      - run:
          name: check running docker
          command: |
            docker ps
      - run:
          name: Stop Services
          command: docker-compose down
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1


workflows:
  version: 2.1
  build-and-release:
    jobs:
      - test:
          context: codeartifact-dev
          name: py2
          runtime: "2.7"

      - test:
          context: codeartifact-dev
          name: py3
          runtime: "3.7"

#      - pypi_release:
#          requires:
#            - py2
#            - py3
#          filters:
#            tags:
#              only: /[0-9]+(\.[0-9]+)*/
